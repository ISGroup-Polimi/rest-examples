{
  "openapi": "3.0.3",
  "info": {
    "title": "Bookstore API",
    "description": "A RESTful API for managing a bookstore's inventory.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://bookstore.psd.polimi.it/v1",
      "description": "Production server"
    },
    {
      "url": "https://localhost:8080/v1",
      "description": "Test server"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "summary": "List all books",
        "operationId": "listBooks",
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new book",
        "operationId": "addBook",
        "security": [{
          "bearerAuth": []
        }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "summary": "Get a single book by ID",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 99999
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "summary": "Update a book",
        "operationId": "updateBook",
        "security": [{
          "bearerAuth": []
        }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 99999
              }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete a book",
        "operationId": "deleteBook",
        "security": [{
          "bearerAuth": []
        }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 99999
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "Book": {
        "type": "object",
        "required": ["id", "title", "author", "price"],
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 99999,
            "example": 12345
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "example": "The Great Gatsby"
          },
          "author": {
            "type": "string",
            "maxLength": 100,
            "example": "F. Scott Fitzgerald"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1000,
            "example": 10.99
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "maxLength": 10,
            "example": "1925-04-10"
          }
        }
      },
      "NewBook": {
        "type": "object",
        "required": ["title", "author", "price"],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "example": "1984"
          },
          "author": {
            "type": "string",
            "maxLength": 100,
            "example": "George Orwell"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1000,
            "example": 9.99
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "maxLength": 10,
            "example": "1949-06-08"
          }
        }
      },
      "UpdateBook": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "maxLength": 100
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 1000
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "maxLength": 10
          }
        }
      }
    }
  }
}
